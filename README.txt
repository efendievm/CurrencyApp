1. Создать таблицы для хранения информации.
	Скрипты для создания таблиц находятся в папке DB

2. Написать код , который будет получать курс валюты, которая у нас используется в системе, каждый день.
	Код представлен в файле Code\Update.cs

3. Написать функцию на SQL, которая будет возвращать курс валюты на определенную дату. Функция должна принимать два параметра – валюту и дату курса, а возвращать курс.
	Скрипты функций находятся в папке DB

4. Написать, аналогичную функцию из п.3, на выбранном языке программирования.
	Код представлен в файле Code\CurrencyValue.cs
	
Приложение CurrencyApp разработано с применением шаблона MVP. 
1. Код класса представления (View) расположен в файле CurrencyApp\MainForm.cs. Интерфейс представления определён в файле CurrencyApp\IView.cs.
2. Код класса модели (Model) расположен в файле Model\Model.cs. Интерфейс модели представлен в файле Model\IModel.cs. Класс модели реализует логику приложения, связанную с 
работой с БД (здесь обновляются таблицы с курсами валют, определены методы для получения курса на заданную дату и пр.).
3. Код класса представителя (Presenter) расположен в файле CurrencyApp\Presenter.cs. Объект класса представителя содержит ссылки на интерфейсы представления и модели. 
В классе представителя определены методы-обработчики событий класса представления, обновляющие объект модели через вызов его интерфейсных методов, и методы-обработчики событий 
класса модели, обновляющие представление (также посредством вызова интерфейсных методов объекта представления).
4. Типы данных, используемые в классах модели и предстаителя, определены в библиотеке классов, а конкретно в файле Types\Types.cs.
5. Объект класса представителя содаётся при запуске приложения в методе main() класса Program. Класс Program определён в файле CurrencyApp\Program.cs.
6. Обновление курсов валют происходит по следующей схеме: при запуске приложение в методе-обработчике события загрузки формы MainForm инициируется событие Update, 
перехватываемое объектом представителя Presenter. В классе представителя определён метод-обработчик данного события, вызывающий на модели Model интерфейсный метод Update(). В данном методе происходит обновление курса валют посредством записи в таблицу CurrencyHistory информации из xml файла (получаемого по URL) в случае, если последняя дата в таблице CurrencyHistory не равна текущей.
   
